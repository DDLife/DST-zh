{"id":"debugprint","deps":[],"as":{},"info":"\n\n个人角色可以在 DST 的控制台设置\n\n```lua\nPRINT_SOURCE = false\n```\n\n然后, 使得 print 能够打印出来文件名和行号\n\n","extern":[{"id":"CWD","info":""},{"id":"escape_lua_pattern","info":"\n\n```ts\nfunction escape_lua_pattern(s: string): string;\n```\n\nFor example, if `s` is `\"hello.world?\"`, the `escape_lua_pattern` function will return `\"hello%.world%?\"`. The `.` character is escaped as `%.`, and the `?` character is escaped as `%?`.\n\n"},{"id":"print","info":"\n\n```ts\nfunction print(...args: any[]): void;\n```\n\nThe custom implementation wraps the original print function in code that shows what line number it is coming from, and pushes it out to all of the print loggers.\n\n"},{"id":"nolineprint","info":"\n\n```ts\nfunction nolineprint(...args: any[]): void;\n```\n\n"},{"id":"AddPrintLogger","info":"\n\n```ts\nfunction AddPrintLogger(fn: (string) => void): void;\n```\n\n相当于给 print 添加一个 listener\n\n"},{"id":"GetConsoleOutputList","info":"\n\n```ts\nfunction GetConsoleOutputList(): string[];\n```\n\n获取 consolelog 的内容\n\n"}],"local":[{"id":"packstring","info":"\n\n```ts\nfunction packstring(...args: string[]): string;\n```\n\nconvert a variable number of arguments into a single string\n\n"},{"id":"consolelog","info":"\n\n```ts\nfunction consolelog(...args: any[]): void;\n```\n\n一个 print 的 listener, 内容保存在 debugstr 中, 调用 @GetConsoleOutputList 获得\n\n只会保存最近的 20 条记录\n\n"}]}