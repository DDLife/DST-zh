{"id":"vector3","deps":[],"as":{},"info":"","extern":[{"id":"Vector3","info":"\n\n```ts\nclass Vector3 {\n  constructor(x?: number, y?: number, z?: number);\n  x: number;\n  y: number;\n  z: number;\n  __add(rhs: Vector3): Vector3;\n  __sub(rhs: Vector3): Vector3;\n  __mul(rhs: number): Vector3;\n  __div(rhs: number): Vector3;\n  __unm(): Vector3; // negate the value\n  Dot(rhs: Vector3): number;\n  Cross(rhs: Vector3): Vector3;\n  __tostring(): string;\n  __eq(rhs: Vector3): boolean;\n  DistSq(other: Vector3): number;\n  Dist(other: Vector3): number;\n  LengthSq(): number;\n  Length(): number;\n  Normalize(): Vector3;\n  GetNormalized(): Vector3;\n  GetNormalizedAndLength(): [Vector3, number];\n  Get(): [number, number, number];\n  IsVector3(): boolean;\n}\n```\n\n"},{"id":"Point","info":"\n\nPoint = Vector3\n\n"},{"id":"ToVector3","info":"\n\n```ts\nfunction ToVector3(\n  obj: Vector3 | [number, number, number] | number,\n  y?: number,\n  z?: number\n): Vector3;\n```\n\n### example\n\n```lua\nlocal vector3 = require(\"vector3\")\n\n-- v1 = Vector3(1, 2, 3)\nlocal v1 = vector3.new(1, 2, 3)\n\n-- v2 = Vector3(4, 5, 6)\nlocal v2 = vector3.ToVector3({4, 5, 6})\n\n-- v3 = Vector3(7, 8, 9)\nlocal v3 = vector3.ToVector3(7, 8, 9)\n\n-- v4 = Vector3(10, 11, 13)\nlocal v4 = vector3.ToVector3({10, 11, 12}, 13)\n\n-- v5 = Vector3(14, 17, 18)\nlocal v5 = vector3.ToVector3({14, 15, 16}, 17, 18)\n```\n\n"},{"id":"Vector3FromTheta","info":"\n\n```ts\nfunction Vector3FromTheta(theta: number, radius?: number): Vector3;\n```\n\n$$\\text{Vector3FromTheta}(\\theta, r) = \\begin{bmatrix}r\\cos(\\theta)\\\\0\\\\-r\\sin(\\theta)\\end{bmatrix}$$\n\n"}],"local":[]}